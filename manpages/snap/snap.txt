OVERVIEW: Make your mobile screenshot automation a breeze and blazingly fast.

This script runs your screenshot UNIT tests with the goal to
automatically generate as many screenshot variants as possible in
as less time as possible.

These variants are:

- all supported device classes
- all supported languages
- dark | light mode
- normal | high contrast mode
- selected dynamic font sizes (smallest, normal, largest)

To speed up this process we do the following:
- run only one unit test: our screenshot test
- first builds the app using `build-for-testing` and then runs
  tests in parallel using `test-without-building` with all variants.

To finish things up we create a nice static webpage from the
results which can cycle through the screenshots automatically so
they can be viewed on a big screen. This way bugs can be detected
early.

The generated screens will also be automatically put into nice
device mockups so the output will actually look like a real phone.

USAGE: snap [--verbose ...] --workspace <workspace> --scheme <scheme> ... --test-plan-name <test-plan-name> [--test-plan-configs <test-plan-configs> ...] [--appearances <appearances> ...] [--devices <devices> ...] [--destination-dir <destination-dir>] --zip-file-name <zip-file-name> [--runtime <runtime>]

OPTIONS:
  -v, --verbose           Activate verbose logging.
  --workspace <workspace> The path to the workspace used to make the screenshots.
  -s, --scheme <scheme>   A scheme to run the screenshot tests on. Can be specified multiple times to generate screenshots for multiple schemes.
  --test-plan-name <test-plan-name>
                          The name of the TestPlan running the screenshot tests.
  -t, --test-plan-configs <test-plan-configs>
                          An optional list of test plan configurations. They must match exactly the name of the config from the test plan.
  --appearances <appearances>
                          The appearances the screenshots should be made for, e.g. --appearances "light" "dark" (default: light)
  --devices <devices>     Devices you want to generate screenshots for (run `xcrun simctl list` to list all possible devices) (default: iPhone 14 Pro)
  --destination-dir <destination-dir>
                          The destination directory where the screenshots and the zip archive should be stored.
  --zip-file-name <zip-file-name>
                          The zip file name that should be used.
  --runtime <runtime>     An optional runtime to be used. Omit to use the latest.
  --version               Show the version.
  -h, --help              Show help information.
